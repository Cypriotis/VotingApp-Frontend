{"ast":null,"code":"var _jsxFileName = \"/home/tofi-machine/Documents/VotingApp/Frontend/VotingApp-Frontend/src/components/electionDetails/electionDetails.js\",\n  _s = $RefreshSig$();\n// ElectionDetails.js\nimport React, { useState, useEffect } from 'react';\nimport apiService from '../../apiService';\nimport './ElectionDetails.css'; // Import the new CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ElectionDetails = () => {\n  _s();\n  const [elections, setElections] = useState([]);\n  useEffect(() => {\n    // Fetch elections data when the component mounts\n    const fetchData = async () => {\n      try {\n        const userid = localStorage.getItem('ID');\n        const token = localStorage.getItem('authToken');\n        const userElections = await apiService.getElectionsData(userid, token);\n        setElections(userElections);\n      } catch (error) {\n        console.error('Error fetching elections:', error.message);\n      }\n    };\n    fetchData();\n  }, []); // Empty dependency array to run the effect only once when the component mounts\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"election-details-container\",\n    children: elections.map(election => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"election-details-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: election.ElectionName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: election.UniqueCode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, election.ElectionName, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(ElectionDetails, \"lXNabii/P/XtAsGMIwKfHkOqImg=\");\n_c = ElectionDetails;\nexport default ElectionDetails;\nvar _c;\n$RefreshReg$(_c, \"ElectionDetails\");","map":{"version":3,"names":["React","useState","useEffect","apiService","jsxDEV","_jsxDEV","ElectionDetails","_s","elections","setElections","fetchData","userid","localStorage","getItem","token","userElections","getElectionsData","error","console","message","className","children","map","election","ElectionName","fileName","_jsxFileName","lineNumber","columnNumber","UniqueCode","_c","$RefreshReg$"],"sources":["/home/tofi-machine/Documents/VotingApp/Frontend/VotingApp-Frontend/src/components/electionDetails/electionDetails.js"],"sourcesContent":["// ElectionDetails.js\nimport React, { useState, useEffect } from 'react';\nimport apiService from '../../apiService';\nimport './ElectionDetails.css'; // Import the new CSS file\n\nconst ElectionDetails = () => {\n  const [elections, setElections] = useState([]);\n\n  useEffect(() => {\n    // Fetch elections data when the component mounts\n    const fetchData = async () => {\n      try {\n        const userid = localStorage.getItem('ID');\n        const token = localStorage.getItem('authToken');\n        const userElections = await apiService.getElectionsData(userid, token);\n        setElections(userElections);\n      } catch (error) {\n        console.error('Error fetching elections:', error.message);\n      }\n    };\n\n    fetchData();\n  }, []); // Empty dependency array to run the effect only once when the component mounts\n\n  return (\n    <div className=\"election-details-container\">\n      {elections.map((election) => (\n        <div key={election.ElectionName} className=\"election-details-item\">\n          <h2>{election.ElectionName}</h2>\n          <div>{election.UniqueCode}</div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ElectionDetails;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,kBAAkB;AACzC,OAAO,uBAAuB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,IAAI,CAAC;QACzC,MAAMC,KAAK,GAAGF,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;QAC/C,MAAME,aAAa,GAAG,MAAMZ,UAAU,CAACa,gBAAgB,CAACL,MAAM,EAAEG,KAAK,CAAC;QACtEL,YAAY,CAACM,aAAa,CAAC;MAC7B,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAACE,OAAO,CAAC;MAC3D;IACF,CAAC;IAEDT,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEL,OAAA;IAAKe,SAAS,EAAC,4BAA4B;IAAAC,QAAA,EACxCb,SAAS,CAACc,GAAG,CAAEC,QAAQ,iBACtBlB,OAAA;MAAiCe,SAAS,EAAC,uBAAuB;MAAAC,QAAA,gBAChEhB,OAAA;QAAAgB,QAAA,EAAKE,QAAQ,CAACC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChCvB,OAAA;QAAAgB,QAAA,EAAME,QAAQ,CAACM;MAAU;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA,GAFxBL,QAAQ,CAACC,YAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAG1B,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACrB,EAAA,CA7BID,eAAe;AAAAwB,EAAA,GAAfxB,eAAe;AA+BrB,eAAeA,eAAe;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}