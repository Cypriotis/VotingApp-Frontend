{"ast":null,"code":"var _jsxFileName = \"/home/tofi-machine/Documents/VotingApp/Frontend/VotingApp-Frontend/src/ProtectedRoute.js\",\n  _s = $RefreshSig$();\n// ProtectedRoute.js\nimport React, { useEffect, useState } from 'react';\nimport { Route, Navigate } from 'react-router-dom';\nimport AuthService from './authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  element\n}) => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const checkAuthentication = async () => {\n      const isAuthenticated = await AuthService.isAuthenticated();\n      setIsLoggedIn(isAuthenticated);\n    };\n    checkAuthentication();\n  }, []);\n  return isLoggedIn ? /*#__PURE__*/_jsxDEV(Route, {\n    element: element\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 23\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/notloggedin\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 53\n  }, this);\n};\n_s(ProtectedRoute, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useEffect","useState","Route","Navigate","AuthService","jsxDEV","_jsxDEV","ProtectedRoute","element","_s","isLoggedIn","setIsLoggedIn","checkAuthentication","isAuthenticated","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["/home/tofi-machine/Documents/VotingApp/Frontend/VotingApp-Frontend/src/ProtectedRoute.js"],"sourcesContent":["// ProtectedRoute.js\nimport React, { useEffect, useState } from 'react';\nimport { Route, Navigate } from 'react-router-dom';\nimport AuthService from './authService';\n\nconst ProtectedRoute = ({ element }) => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    const checkAuthentication = async () => {\n      const isAuthenticated = await AuthService.isAuthenticated();\n      setIsLoggedIn(isAuthenticated);\n    };\n\n    checkAuthentication();\n  }, []);\n\n  return isLoggedIn ? <Route element={element} /> : <Navigate to=\"/notloggedin\" />;\n};\n\nexport default ProtectedRoute;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAClD,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEnDD,SAAS,CAAC,MAAM;IACd,MAAMY,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACtC,MAAMC,eAAe,GAAG,MAAMT,WAAW,CAACS,eAAe,CAAC,CAAC;MAC3DF,aAAa,CAACE,eAAe,CAAC;IAChC,CAAC;IAEDD,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOF,UAAU,gBAAGJ,OAAA,CAACJ,KAAK;IAACM,OAAO,EAAEA;EAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,gBAAGX,OAAA,CAACH,QAAQ;IAACe,EAAE,EAAC;EAAc;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAClF,CAAC;AAACR,EAAA,CAbIF,cAAc;AAAAY,EAAA,GAAdZ,cAAc;AAepB,eAAeA,cAAc;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}