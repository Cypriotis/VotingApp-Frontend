{"ast":null,"code":"var _jsxFileName = \"/home/tofi-machine/Documents/VotingApp/Frontend/VotingApp-Frontend/src/ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Route, Navigate } from 'react-router-dom';\nimport AuthService from './authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  path,\n  element\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(null);\n  useEffect(() => {\n    const checkAuthentication = async () => {\n      const result = await AuthService.isAuthenticated();\n      setIsAuthenticated(result);\n    };\n    checkAuthentication();\n  }, []);\n  if (isAuthenticated === null) {\n    // Loading state, you can return a loading spinner or any other UI if needed\n    return null;\n  }\n  return isAuthenticated ? /*#__PURE__*/_jsxDEV(Route, {\n    path: path,\n    element: element\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/notloggedin\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(ProtectedRoute, \"ZTMIcZ3KFUL4S6fmpEYhW5p5Z1I=\");\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useEffect","useState","Route","Navigate","AuthService","jsxDEV","_jsxDEV","ProtectedRoute","path","element","_s","isAuthenticated","setIsAuthenticated","checkAuthentication","result","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["/home/tofi-machine/Documents/VotingApp/Frontend/VotingApp-Frontend/src/ProtectedRoute.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Route, Navigate } from 'react-router-dom';\nimport AuthService from './authService';\n\nconst ProtectedRoute = ({ path, element }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(null);\n\n  useEffect(() => {\n    const checkAuthentication = async () => {\n      const result = await AuthService.isAuthenticated();\n      setIsAuthenticated(result);\n    };\n\n    checkAuthentication();\n  }, []);\n\n  if (isAuthenticated === null) {\n    // Loading state, you can return a loading spinner or any other UI if needed\n    return null;\n  }\n\n  return isAuthenticated ? (\n    <Route path={path} element={element} />\n  ) : (\n    <Navigate to=\"/notloggedin\" />\n  );\n};\n\nexport default ProtectedRoute;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAClD,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,cAAc,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE5DD,SAAS,CAAC,MAAM;IACd,MAAMa,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACtC,MAAMC,MAAM,GAAG,MAAMV,WAAW,CAACO,eAAe,CAAC,CAAC;MAClDC,kBAAkB,CAACE,MAAM,CAAC;IAC5B,CAAC;IAEDD,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,eAAe,KAAK,IAAI,EAAE;IAC5B;IACA,OAAO,IAAI;EACb;EAEA,OAAOA,eAAe,gBACpBL,OAAA,CAACJ,KAAK;IAACM,IAAI,EAAEA,IAAK;IAACC,OAAO,EAAEA;EAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,gBAEvCZ,OAAA,CAACH,QAAQ;IAACgB,EAAE,EAAC;EAAc;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAC9B;AACH,CAAC;AAACR,EAAA,CAtBIH,cAAc;AAAAa,EAAA,GAAdb,cAAc;AAwBpB,eAAeA,cAAc;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}