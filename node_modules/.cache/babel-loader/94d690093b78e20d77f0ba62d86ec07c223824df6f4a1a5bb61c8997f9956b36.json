{"ast":null,"code":"var _jsxFileName = \"/home/tofi-machine/Documents/VotingApp/Frontend/VotingApp-Frontend/src/components/electionList/parentComp.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport apiService from '../../apiService.js';\nimport ElectionsList from './electionList'; // Adjust the import path based on your project structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParentComponent = () => {\n  _s();\n  const [elections, setElections] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const userid = localStorage.getItem('ID');\n        const token = localStorage.getItem('authToken');\n        const userData = await apiService.getelections(userid, token);\n\n        // Assuming the response structure is as mentioned in the postman example\n        setElections(userData.elections);\n      } catch (error) {\n        console.error('Error fetching elections:', error);\n      }\n    };\n    fetchData();\n  }, []); // Empty dependency array ensures the effect runs only once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Elections List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), elections.map(election => /*#__PURE__*/_jsxDEV(ElectionsList, {\n      title: election.Title,\n      description: election.Description,\n      startdate: election.StartDate,\n      enddate: election.EndDate\n    }, election.ElectionID, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(ParentComponent, \"lXNabii/P/XtAsGMIwKfHkOqImg=\");\n_c = ParentComponent;\nexport default ParentComponent;\nvar _c;\n$RefreshReg$(_c, \"ParentComponent\");","map":{"version":3,"names":["React","useEffect","useState","apiService","ElectionsList","jsxDEV","_jsxDEV","ParentComponent","_s","elections","setElections","fetchData","userid","localStorage","getItem","token","userData","getelections","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","election","title","Title","description","Description","startdate","StartDate","enddate","EndDate","ElectionID","_c","$RefreshReg$"],"sources":["/home/tofi-machine/Documents/VotingApp/Frontend/VotingApp-Frontend/src/components/electionList/parentComp.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport apiService from '../../apiService.js';\nimport ElectionsList from './electionList'; // Adjust the import path based on your project structure\n\nconst ParentComponent = () => {\n  const [elections, setElections] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const userid = localStorage.getItem('ID');\n        const token = localStorage.getItem('authToken');\n        const userData = await apiService.getelections(userid, token);\n\n        // Assuming the response structure is as mentioned in the postman example\n        setElections(userData.elections);\n      } catch (error) {\n        console.error('Error fetching elections:', error);\n      }\n    };\n\n    fetchData();\n  }, []); // Empty dependency array ensures the effect runs only once on mount\n\n  return (\n    <div>\n      <h2>Elections List</h2>\n      {elections.map((election) => (\n        <ElectionsList\n          key={election.ElectionID}\n          title={election.Title}\n          description={election.Description}\n          startdate={election.StartDate}\n          enddate={election.EndDate}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default ParentComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,qBAAqB;AAC5C,OAAOC,aAAa,MAAM,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,IAAI,CAAC;QACzC,MAAMC,KAAK,GAAGF,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;QAC/C,MAAME,QAAQ,GAAG,MAAMb,UAAU,CAACc,YAAY,CAACL,MAAM,EAAEG,KAAK,CAAC;;QAE7D;QACAL,YAAY,CAACM,QAAQ,CAACP,SAAS,CAAC;MAClC,CAAC,CAAC,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IAEDP,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEL,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtBf,SAAS,CAACgB,GAAG,CAAEC,QAAQ,iBACtBpB,OAAA,CAACF,aAAa;MAEZuB,KAAK,EAAED,QAAQ,CAACE,KAAM;MACtBC,WAAW,EAAEH,QAAQ,CAACI,WAAY;MAClCC,SAAS,EAAEL,QAAQ,CAACM,SAAU;MAC9BC,OAAO,EAAEP,QAAQ,CAACQ;IAAQ,GAJrBR,QAAQ,CAACS,UAAU;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKzB,CACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAChB,EAAA,CAlCID,eAAe;AAAA6B,EAAA,GAAf7B,eAAe;AAoCrB,eAAeA,eAAe;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}