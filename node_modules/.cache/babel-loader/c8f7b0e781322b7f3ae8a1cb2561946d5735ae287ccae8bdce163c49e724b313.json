{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\n// authService.js\nimport { useDispatch } from 'react-redux';\nimport { setAuthToken, clearAuthToken } from './authActions';\nconst API_BASE_URL = 'http://13.39.23.248:3000/api';\nexport const useAuthDispatch = () => {\n  _s();\n  return useDispatch();\n};\n_s(useAuthDispatch, \"jI3HA1r1Cumjdbu14H7G+TUj798=\", false, function () {\n  return [useDispatch];\n});\nconst authService = {\n  login: _s2(async (identifier, password) => {\n    _s2();\n    try {\n      const response = await fetch(`${API_BASE_URL}/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*' // Adjust based on your server's requirements\n        },\n        body: JSON.stringify({\n          identifier,\n          password\n        }),\n        credentials: 'include' // Include credentials (cookies, etc.)\n      });\n      if (!response.ok) {\n        throw new Error('Login failed');\n      }\n      const data = await response.json();\n      console.log('Login successful:', data);\n      const dispatch = useAuthDispatch();\n      dispatch(setAuthToken(data.token));\n    } catch (error) {\n      console.error('Login failed:', error.message);\n      throw error;\n    }\n  }, \"KawBQZO6wjhJS87clp5ztGL3HzE=\", false, function () {\n    return [useAuthDispatch];\n  }),\n  logout: _s3(async () => {\n    _s3();\n    try {\n      // Additional logout logic if needed\n\n      const dispatch = useAuthDispatch();\n      dispatch(clearAuthToken());\n    } catch (error) {\n      console.error('Logout failed:', error.message);\n      throw error;\n    }\n  }, \"KawBQZO6wjhJS87clp5ztGL3HzE=\", false, function () {\n    return [useAuthDispatch];\n  }),\n  register: async (username, email, password) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*' // Adjust based on your server's requirements\n        },\n        body: JSON.stringify({\n          username,\n          password,\n          email\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Registration failed');\n      }\n      const data = await response.json();\n      console.log('Registration successful:', data);\n    } catch (error) {\n      console.error('Registration failed:', error.message);\n      throw error;\n    }\n  }\n\n  // ... other methods\n};\nexport default authService;","map":{"version":3,"names":["useDispatch","setAuthToken","clearAuthToken","API_BASE_URL","useAuthDispatch","_s","authService","login","_s2","identifier","password","response","fetch","method","headers","body","JSON","stringify","credentials","ok","Error","data","json","console","log","dispatch","token","error","message","logout","_s3","register","username","email"],"sources":["/home/tofi-machine/Documents/VotingApp/Frontend/VotingApp-Frontend/src/authService.js"],"sourcesContent":["// authService.js\nimport { useDispatch } from 'react-redux';\nimport { setAuthToken, clearAuthToken } from './authActions';\n\nconst API_BASE_URL = 'http://13.39.23.248:3000/api';\n\nexport const useAuthDispatch = () => {\n  return useDispatch();\n};\n\nconst authService = {\n  login: async (identifier, password) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*', // Adjust based on your server's requirements\n        },\n        body: JSON.stringify({ identifier, password }),\n        credentials: 'include', // Include credentials (cookies, etc.)\n      });\n\n      if (!response.ok) {\n        throw new Error('Login failed');\n      }\n\n      const data = await response.json();\n      console.log('Login successful:', data);\n\n      const dispatch = useAuthDispatch();\n      dispatch(setAuthToken(data.token));\n\n    } catch (error) {\n      console.error('Login failed:', error.message);\n      throw error;\n    }\n  },\n\n  logout: async () => {\n    try {\n      // Additional logout logic if needed\n\n      const dispatch = useAuthDispatch();\n      dispatch(clearAuthToken());\n\n    } catch (error) {\n      console.error('Logout failed:', error.message);\n      throw error;\n    }\n  },\n\n  register: async (username, email, password) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*', // Adjust based on your server's requirements\n        },\n        body: JSON.stringify({ username, password, email }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Registration failed');\n      }\n\n      const data = await response.json();\n      console.log('Registration successful:', data);\n\n    } catch (error) {\n      console.error('Registration failed:', error.message);\n      throw error;\n    }\n  },\n\n  // ... other methods\n};\n\nexport default authService;\n"],"mappings":";;;AAAA;AACA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAASC,YAAY,EAAEC,cAAc,QAAQ,eAAe;AAE5D,MAAMC,YAAY,GAAG,8BAA8B;AAEnD,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,OAAOL,WAAW,CAAC,CAAC;AACtB,CAAC;AAACK,EAAA,CAFWD,eAAe;EAAA,QACnBJ,WAAW;AAAA;AAGpB,MAAMM,WAAW,GAAG;EAClBC,KAAK,EAAAC,GAAA,CAAE,OAAOC,UAAU,EAAEC,QAAQ,KAAK;IAAAF,GAAA;IACrC,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAET,YAAa,QAAO,EAAE;QACpDU,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,6BAA6B,EAAE,GAAG,CAAE;QACtC,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAER,UAAU;UAAEC;QAAS,CAAC,CAAC;QAC9CQ,WAAW,EAAE,SAAS,CAAE;MAC1B,CAAC,CAAC;MAEF,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,cAAc,CAAC;MACjC;MAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,IAAI,CAAC;MAEtC,MAAMI,QAAQ,GAAGrB,eAAe,CAAC,CAAC;MAClCqB,QAAQ,CAACxB,YAAY,CAACoB,IAAI,CAACK,KAAK,CAAC,CAAC;IAEpC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,eAAe,EAAEA,KAAK,CAACC,OAAO,CAAC;MAC7C,MAAMD,KAAK;IACb;EACF,CAAC;IAAA,QAPoBvB,eAAe;EAAA,EAOnC;EAEDyB,MAAM,EAAAC,GAAA,CAAE,YAAY;IAAAA,GAAA;IAClB,IAAI;MACF;;MAEA,MAAML,QAAQ,GAAGrB,eAAe,CAAC,CAAC;MAClCqB,QAAQ,CAACvB,cAAc,CAAC,CAAC,CAAC;IAE5B,CAAC,CAAC,OAAOyB,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACC,OAAO,CAAC;MAC9C,MAAMD,KAAK;IACb;EACF,CAAC;IAAA,QAPoBvB,eAAe;EAAA,EAOnC;EAED2B,QAAQ,EAAE,MAAAA,CAAOC,QAAQ,EAAEC,KAAK,EAAEvB,QAAQ,KAAK;IAC7C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAET,YAAa,WAAU,EAAE;QACvDU,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,6BAA6B,EAAE,GAAG,CAAE;QACtC,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEe,QAAQ;UAAEtB,QAAQ;UAAEuB;QAAM,CAAC;MACpD,CAAC,CAAC;MAEF,IAAI,CAACtB,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;MACxC;MAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEH,IAAI,CAAC;IAE/C,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACC,OAAO,CAAC;MACpD,MAAMD,KAAK;IACb;EACF;;EAEA;AACF,CAAC;AAED,eAAerB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}