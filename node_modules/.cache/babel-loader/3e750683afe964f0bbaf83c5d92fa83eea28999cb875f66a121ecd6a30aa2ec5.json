{"ast":null,"code":"// authService.js\nconst apiUrl = 'http://13.39.86.137:3000/api/login';\nexport const login = async (username, password) => {\n  try {\n    const response = await fetch(apiUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    if (!response.ok) {\n      throw new Error(`Login failed: ${response.statusText}`);\n    }\n    const data = await response.json();\n    return data; // Assuming the server returns some user data upon successful login\n  } catch (error) {\n    throw error;\n  }\n};","map":{"version":3,"names":["apiUrl","login","username","password","response","fetch","method","headers","body","JSON","stringify","ok","Error","statusText","data","json","error"],"sources":["/home/tofi-machine/Documents/VotingApp/Frontend/VotingApp-Frontend/src/authService.js"],"sourcesContent":["// authService.js\nconst apiUrl = 'http://13.39.86.137:3000/api/login';\n\nexport const login = async (username, password) => {\n  try {\n    const response = await fetch(apiUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ username, password }),\n    });\n\n    if (!response.ok) {\n      throw new Error(`Login failed: ${response.statusText}`);\n    }\n\n    const data = await response.json();\n    return data; // Assuming the server returns some user data upon successful login\n  } catch (error) {\n    throw error;\n  }\n};\n"],"mappings":"AAAA;AACA,MAAMA,MAAM,GAAG,oCAAoC;AAEnD,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EACjD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,MAAM,EAAE;MACnCM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,QAAQ;QAAEC;MAAS,CAAC;IAC7C,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAE,iBAAgBR,QAAQ,CAACS,UAAW,EAAC,CAAC;IACzD;IAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAAC,CAAC;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}