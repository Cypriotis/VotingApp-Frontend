{"ast":null,"code":"var _jsxFileName = \"/home/tofi-machine/Documents/VotingApp/Frontend/VotingApp-Frontend/src/components/electionDetails/electionDetails.js\",\n  _s = $RefreshSig$();\n// ElectionDetails.js\nimport React, { useState, useEffect } from 'react';\nimport apiService from '../../apiService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ElectionDetails = () => {\n  _s();\n  const [elections, setElections] = useState([]);\n  useEffect(() => {\n    // Fetch elections data when the component mounts\n    const fetchData = async () => {\n      try {\n        const userid = localStorage.getItem('ID');\n        const token = localStorage.getItem('authToken');\n        const userElections = await apiService.getelections(userid, token);\n        setElections(userElections);\n      } catch (error) {\n        console.error('Error fetching elections:', error.message);\n      }\n    };\n    fetchData();\n  }, []); // Empty dependency array to run the effect only once when the component mounts\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"election-details-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Election Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), elections.map(election => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: election.title\n      }, election.electionID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Unique Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), elections.map(election => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: election.uniqueCode\n      }, election.electionID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(ElectionDetails, \"lXNabii/P/XtAsGMIwKfHkOqImg=\");\n_c = ElectionDetails;\nexport default ElectionDetails;\nvar _c;\n$RefreshReg$(_c, \"ElectionDetails\");","map":{"version":3,"names":["React","useState","useEffect","apiService","jsxDEV","_jsxDEV","ElectionDetails","_s","elections","setElections","fetchData","userid","localStorage","getItem","token","userElections","getelections","error","console","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","election","title","electionID","uniqueCode","_c","$RefreshReg$"],"sources":["/home/tofi-machine/Documents/VotingApp/Frontend/VotingApp-Frontend/src/components/electionDetails/electionDetails.js"],"sourcesContent":["// ElectionDetails.js\nimport React, { useState, useEffect } from 'react';\nimport apiService from '../../apiService';\n\nconst ElectionDetails = () => {\n  const [elections, setElections] = useState([]);\n\n  useEffect(() => {\n    // Fetch elections data when the component mounts\n    const fetchData = async () => {\n      try {\n        const userid = localStorage.getItem('ID');\n        const token = localStorage.getItem('authToken');\n        const userElections = await apiService.getelections(userid, token);\n        setElections(userElections);\n      } catch (error) {\n        console.error('Error fetching elections:', error.message);\n      }\n    };\n\n    fetchData();\n  }, []); // Empty dependency array to run the effect only once when the component mounts\n\n  return (\n    <div className=\"election-details-container\">\n      <div className=\"column\">\n        <h2>Election Title</h2>\n        {elections.map((election) => (\n          <div key={election.electionID}>{election.title}</div>\n        ))}\n      </div>\n      <div className=\"column\">\n        <h2>Unique Code</h2>\n        {elections.map((election) => (\n          <div key={election.electionID}>{election.uniqueCode}</div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ElectionDetails;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,IAAI,CAAC;QACzC,MAAMC,KAAK,GAAGF,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;QAC/C,MAAME,aAAa,GAAG,MAAMZ,UAAU,CAACa,YAAY,CAACL,MAAM,EAAEG,KAAK,CAAC;QAClEL,YAAY,CAACM,aAAa,CAAC;MAC7B,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAACE,OAAO,CAAC;MAC3D;IACF,CAAC;IAEDT,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEL,OAAA;IAAKe,SAAS,EAAC,4BAA4B;IAAAC,QAAA,gBACzChB,OAAA;MAAKe,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACrBhB,OAAA;QAAAgB,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACtBjB,SAAS,CAACkB,GAAG,CAAEC,QAAQ,iBACtBtB,OAAA;QAAAgB,QAAA,EAAgCM,QAAQ,CAACC;MAAK,GAApCD,QAAQ,CAACE,UAAU;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAuB,CACrD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNpB,OAAA;MAAKe,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACrBhB,OAAA;QAAAgB,QAAA,EAAI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACnBjB,SAAS,CAACkB,GAAG,CAAEC,QAAQ,iBACtBtB,OAAA;QAAAgB,QAAA,EAAgCM,QAAQ,CAACG;MAAU,GAAzCH,QAAQ,CAACE,UAAU;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA4B,CAC1D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClB,EAAA,CAnCID,eAAe;AAAAyB,EAAA,GAAfzB,eAAe;AAqCrB,eAAeA,eAAe;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}