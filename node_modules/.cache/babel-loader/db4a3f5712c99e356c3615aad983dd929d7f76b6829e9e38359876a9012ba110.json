{"ast":null,"code":"var _jsxFileName = \"/home/tofi-machine/Documents/VotingApp/Frontend/VotingApp-Frontend/src/components/electionList/parentComp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ElectionsList from './electionList'; // Import your child component\nimport apiService from '../../apiService'; // Import your API service\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParentComponent = () => {\n  _s();\n  const [electionsData, setElectionsData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const userid = localStorage.getItem('ID');\n        const token = localStorage.getItem('authToken');\n        const userData = await apiService.getelections(userid, token);\n\n        // Assuming the API response structure has 'elections' property\n        setElectionsData(userData.elections);\n      } catch (error) {\n        console.error('Error fetching elections:', error);\n      }\n    };\n    fetchData();\n  }, []); // Empty dependency array ensures the effect runs once on component mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: electionsData.map(election => /*#__PURE__*/_jsxDEV(ElectionsList, {\n      // Assuming ElectionID is unique\n      title: election.Title,\n      description: election.Description,\n      startdate: election.StartDate,\n      enddate: election.EndDate\n    }, election.ElectionID, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(ParentComponent, \"lo98d13WTcncTq/e8uV0XHsWeVs=\");\n_c = ParentComponent;\nexport default ParentComponent;\nvar _c;\n$RefreshReg$(_c, \"ParentComponent\");","map":{"version":3,"names":["React","useState","useEffect","ElectionsList","apiService","jsxDEV","_jsxDEV","ParentComponent","_s","electionsData","setElectionsData","fetchData","userid","localStorage","getItem","token","userData","getelections","elections","error","console","children","map","election","title","Title","description","Description","startdate","StartDate","enddate","EndDate","ElectionID","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/tofi-machine/Documents/VotingApp/Frontend/VotingApp-Frontend/src/components/electionList/parentComp.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ElectionsList from './electionList'; // Import your child component\nimport apiService from '../../apiService'; // Import your API service\n\nconst ParentComponent = () => {\n  const [electionsData, setElectionsData] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const userid = localStorage.getItem('ID');\n        const token = localStorage.getItem('authToken');\n\n        const userData = await apiService.getelections(userid, token);\n\n        // Assuming the API response structure has 'elections' property\n        setElectionsData(userData.elections);\n      } catch (error) {\n        console.error('Error fetching elections:', error);\n      }\n    };\n\n    fetchData();\n  }, []); // Empty dependency array ensures the effect runs once on component mount\n\n  return (\n    <div>\n      {/* Map through the electionsData and render child components */}\n      {electionsData.map((election) => (\n        <ElectionsList\n          key={election.ElectionID} // Assuming ElectionID is unique\n          title={election.Title}\n          description={election.Description}\n          startdate={election.StartDate}\n          enddate={election.EndDate}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default ParentComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,gBAAgB,CAAC,CAAC;AAC5C,OAAOC,UAAU,MAAM,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACd,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,IAAI,CAAC;QACzC,MAAMC,KAAK,GAAGF,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;QAE/C,MAAME,QAAQ,GAAG,MAAMZ,UAAU,CAACa,YAAY,CAACL,MAAM,EAAEG,KAAK,CAAC;;QAE7D;QACAL,gBAAgB,CAACM,QAAQ,CAACE,SAAS,CAAC;MACtC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IAEDR,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEL,OAAA;IAAAe,QAAA,EAEGZ,aAAa,CAACa,GAAG,CAAEC,QAAQ,iBAC1BjB,OAAA,CAACH,aAAa;MACc;MAC1BqB,KAAK,EAAED,QAAQ,CAACE,KAAM;MACtBC,WAAW,EAAEH,QAAQ,CAACI,WAAY;MAClCC,SAAS,EAAEL,QAAQ,CAACM,SAAU;MAC9BC,OAAO,EAAEP,QAAQ,CAACQ;IAAQ,GAJrBR,QAAQ,CAACS,UAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKzB,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAnCID,eAAe;AAAA8B,EAAA,GAAf9B,eAAe;AAqCrB,eAAeA,eAAe;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}